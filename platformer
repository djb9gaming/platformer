import pygame
pygame.init()  
pygame.display.set_caption("sprite sheet")  # sets the window title
screen = pygame.display.set_mode((800, 800))  # creates game screen
screen.fill((0,0,0))
clock = pygame.time.Clock() #set up clock
gameover = False #variable to run our game loop

link = pygame.image.load('link.png') #load your spritesheet
link.set_colorkey((255, 0, 255)) #this makes bright pink (255, 0, 255) transparent (sort of)
#player variables
xpos = 500 #xpos of player
ypos = 200 #ypos of player
vx = 0 #x velocity of player
vy = 0 #y velocity of player
keys = [False, False, False, False] #this list holds whether each key has been pressed
#animation varibles


frameWidth = 64
frameHeight = 96
RowNum = 0 #for let animation, this will need to change for other animations
frameNum = 0
ticker = 0

while not gameover: #GAME LOOP############################################################
    clock.tick(60) #FPS
    
    
#Input Section------------------------------------------------------------
    for event in pygame.event.get(): #quit game if x is pressed in top corner
        if event.type == pygame.QUIT:
            gameover = True
      
        if event.type == pygame.KEYDOWN: #keyboard input
            if event.key == pygame.K_LEFT:
                keys[0]=True
            elif event.key == pygame.K_RIGHT:#talk about RIGHT
                keys[1]=True#here too!
            elif event.key == pygame.K_UP:
                keys[2]=True
        elif event.type == pygame.KEYUP:
            if event.key == pygame.K_LEFT:
                keys[0]=False
            if event.key == pygame.K_RIGHT:
                keys[1]=False
            elif event.key == pygame.K_UP:
                keys[2]=False
   
   #LEFT MOVEMENT
    if keys[0]==True:
        vx=-4
        direction = 0
    elif keys[1]==True:
        vx=4
        direction = 1
    #redo the three lines above with RIGHT (elif)
    #turn off velocity
    else:
        vx = 0
        #JUMPING
    if keys[3] == True and isOnGround == True: #only jump when on the ground
        vy = -8
        isOnGround = True
        direction = 2
        
    xpos += vx
    ypos += vy
#ANIMATION
# only animate when in motion
    if vx > 0: #left animation
        RowNum = 1
        frameNum = 1
    #ticker is a spedometer, we dont want link animating as fast as the
    # processor can process! update animation fram each time ticker goes over
        ticker+=1
        if ticker%10==0: #only change frames ever 10 ticks
            frameNum+=1
    #if we are over the number of frames in our sprite, reet to 0.
        if frameNum>7:
            frameNum = 0
# RENDER-------------------------------------
#once we've figured out what frame we're on and where we are, time to render,


    screen.fill((0,0,0)) #wipe screen so it doesn't smear
    screen.blit(link, (xpos, ypos), (frameWidth*frameNum, RowNum*frameHeight, frameWidth, frameHeight))
    pygame.display.flip()#this actually puts the pixel on the screen
 #end game loop-------------------------------------
pygame.quit()
            
